{"ast":null,"code":"// import React, { useRef, useState } from \"react\"\n// import { Form, Button, Card, Alert } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\n// import { Link, useHistory } from \"react-router-dom\"\n// export default function Login() {\n//   const phoneRef = useRef()\n//   const { loginViaPhone } = useAuth()\n//   const [error, setError] = useState(\"\")\n//   const [loading, setLoading] = useState(false)\n//   const history = useHistory()\n//   async function handleSubmit(e) {\n//     e.preventDefault()\n//     await loginViaPhone(phoneRef.current.value)\n//     // \n//     // history.push(\"/\")\n//   }\n//   return (\n//     <>\n//       <Card class=\"centered\">\n//         <Card.Body>\n//           <h2 className=\"text-center mb-4\">Login with Phone</h2>\n//           {error && <Alert variant=\"danger\">{error}</Alert>}\n//           <Form onSubmit={handleSubmit} class=\"split left\">\n//             <Form.Group id=\"Phone Number\">\n//               <Form.Label>Phone Number</Form.Label>\n//               <Form.Control type=\"text\" placeholder=\"Enter Phone Number\"  ref={phoneRef} required />\n//             </Form.Group>\n//             <div id=\"recaptcha\"></div> \n//             <Button disabled={loading} style={{backgroundColor:\"green\"}} className=\"w-100\" type=\"submit\">\n//              <b> Login</b>\n//             </Button>\n//           </Form>\n//           <div className=\"w-100 text-center mt-3\">\n//             <Link to=\"/forgot-password\"><small class=\"text-muted\">Forgot Password?</small></Link>\n//           </div>\n//         </Card.Body>\n//       </Card>\n//       <div className=\"w-100 text-center mt-2\" class=\"split right\">\n//       <div class=\"centered\">\n//         <p style={{color:\"green\"}}>Need an account?</p>\n// \t<Button className=\"w-100\" style={{backgroundColor:\"green\"}}><Link to=\"/signup\"><medium class=\"text-white\"><b>Sign up</b></medium></Link></Button>\n//      </div>\n//       </div>\n//     </>\n//   )\n// }\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\"; // Mask the global 'window' for this snippet file\n\nconst window = {\n  recaptchaVerifier: undefined\n};\n\nfunction recaptchaVerifierInvisible() {\n  function onSignInSubmit() {// TODO(you): Implement\n  } // [START auth_phone_recaptcha_verifier_invisible]\n\n\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n    'size': 'invisible',\n    'callback': response => {\n      // reCAPTCHA solved, allow signInWithPhoneNumber.\n      onSignInSubmit();\n    }\n  }); // [END auth_phone_recaptcha_verifier_invisible]\n}\n\nfunction recaptchaVerifierVisible() {\n  // [START auth_phone_recaptcha_verifier_visible]\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n    'size': 'normal',\n    'callback': response => {// reCAPTCHA solved, allow signInWithPhoneNumber.\n      // ...\n    },\n    'expired-callback': () => {// Response expired. Ask user to solve reCAPTCHA again.\n      // ...\n    }\n  }); // [END auth_phone_recaptcha_verifier_visible]\n}\n\nfunction recaptchaVerifierSimple() {\n  // [START auth_phone_recaptcha_verifier_simple]\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container'); // [END auth_phone_recaptcha_verifier_simple]\n}\n\nfunction recaptchaRender() {\n  /** @type {firebase.auth.RecaptchaVerifier} */\n  const recaptchaVerifier = window.recaptchaVerifier; // [START auth_phone_recaptcha_render]\n\n  recaptchaVerifier.render().then(widgetId => {\n    window.recaptchaWidgetId = widgetId;\n  }); // [END auth_phone_recaptcha_render]\n}\n\nfunction phoneSignIn() {\n  function getPhoneNumberFromUserInput() {\n    return \"+15558675309\";\n  } // [START auth_phone_signin]\n\n\n  const phoneNumber = getPhoneNumberFromUserInput();\n  const appVerifier = window.recaptchaVerifier;\n  firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier).then(confirmationResult => {\n    // SMS sent. Prompt user to type the code from the message, then sign the\n    // user in with confirmationResult.confirm(code).\n    window.confirmationResult = confirmationResult; // ...\n  }).catch(error => {// Error; SMS not sent\n    // ...\n  }); // [END auth_phone_signin]\n}\n\nfunction verifyCode() {\n  function getCodeFromUserInput() {\n    return \"1234\";\n  }\n  /** @type {firebase.auth.ConfirmationResult} */\n\n\n  const confirmationResult = undefined; // [START auth_phone_verify_code]\n\n  const code = getCodeFromUserInput();\n  confirmationResult.confirm(code).then(result => {\n    // User signed in successfully.\n    const user = result.user; // ...\n  }).catch(error => {// User couldn't sign in (bad verification code?)\n    // ...\n  }); // [END auth_phone_verify_code]\n}\n\nfunction getRecaptchaResponse() {\n  const recaptchaWidgetId = \"...\";\n  const grecaptcha = {}; // [START auth_get_recaptcha_response]\n\n  const recaptchaResponse = grecaptcha.getResponse(recaptchaWidgetId); // [END auth_get_recaptcha_response]\n}","map":{"version":3,"sources":["/home/manish/cropdarpan/Team_CropDarpan/src/components/LoginViaPhone.js"],"names":["firebase","window","recaptchaVerifier","undefined","recaptchaVerifierInvisible","onSignInSubmit","auth","RecaptchaVerifier","response","recaptchaVerifierVisible","recaptchaVerifierSimple","recaptchaRender","render","then","widgetId","recaptchaWidgetId","phoneSignIn","getPhoneNumberFromUserInput","phoneNumber","appVerifier","signInWithPhoneNumber","confirmationResult","catch","error","verifyCode","getCodeFromUserInput","code","confirm","result","user","getRecaptchaResponse","grecaptcha","recaptchaResponse","getResponse"],"mappings":"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","sourcesContent":["// import React, { useRef, useState } from \"react\"\n// import { Form, Button, Card, Alert } from \"react-bootstrap\"\n// import { useAuth } from \"../contexts/AuthContext\"\n// import { Link, useHistory } from \"react-router-dom\"\n\n// export default function Login() {\n//   const phoneRef = useRef()\n  \n//   const { loginViaPhone } = useAuth()\n//   const [error, setError] = useState(\"\")\n//   const [loading, setLoading] = useState(false)\n//   const history = useHistory()\n\n//   async function handleSubmit(e) {\n//     e.preventDefault()\n//     await loginViaPhone(phoneRef.current.value)\n//     // \n//     // history.push(\"/\")\n  \n//   }\n\n//   return (\n//     <>\n//       <Card class=\"centered\">\n//         <Card.Body>\n//           <h2 className=\"text-center mb-4\">Login with Phone</h2>\n//           {error && <Alert variant=\"danger\">{error}</Alert>}\n//           <Form onSubmit={handleSubmit} class=\"split left\">\n//             <Form.Group id=\"Phone Number\">\n//               <Form.Label>Phone Number</Form.Label>\n//               <Form.Control type=\"text\" placeholder=\"Enter Phone Number\"  ref={phoneRef} required />\n//             </Form.Group>\n//             <div id=\"recaptcha\"></div> \n//             <Button disabled={loading} style={{backgroundColor:\"green\"}} className=\"w-100\" type=\"submit\">\n//              <b> Login</b>\n//             </Button>\n//           </Form>\n//           <div className=\"w-100 text-center mt-3\">\n//             <Link to=\"/forgot-password\"><small class=\"text-muted\">Forgot Password?</small></Link>\n//           </div>\n//         </Card.Body>\n//       </Card>\n//       <div className=\"w-100 text-center mt-2\" class=\"split right\">\n//       <div class=\"centered\">\n//         <p style={{color:\"green\"}}>Need an account?</p>\n// \t<Button className=\"w-100\" style={{backgroundColor:\"green\"}}><Link to=\"/signup\"><medium class=\"text-white\"><b>Sign up</b></medium></Link></Button>\n//      </div>\n//       </div>\n//     </>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\n// Mask the global 'window' for this snippet file\nconst window = {\n  recaptchaVerifier: undefined\n};\n\nfunction recaptchaVerifierInvisible() {\n  function onSignInSubmit() {\n    // TODO(you): Implement\n  }\n\n  // [START auth_phone_recaptcha_verifier_invisible]\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n    'size': 'invisible',\n    'callback': (response) => {\n      // reCAPTCHA solved, allow signInWithPhoneNumber.\n      onSignInSubmit();\n    }\n  });\n  // [END auth_phone_recaptcha_verifier_invisible]\n}\n\nfunction recaptchaVerifierVisible() {\n  // [START auth_phone_recaptcha_verifier_visible]\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container', {\n    'size': 'normal',\n    'callback': (response) => {\n      // reCAPTCHA solved, allow signInWithPhoneNumber.\n      // ...\n    },\n    'expired-callback': () => {\n      // Response expired. Ask user to solve reCAPTCHA again.\n      // ...\n    }\n  });\n  // [END auth_phone_recaptcha_verifier_visible]\n}\n\nfunction recaptchaVerifierSimple() {\n  // [START auth_phone_recaptcha_verifier_simple]\n  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n  // [END auth_phone_recaptcha_verifier_simple]\n}\n\nfunction recaptchaRender() {\n  /** @type {firebase.auth.RecaptchaVerifier} */\n  const recaptchaVerifier = window.recaptchaVerifier;\n\n  // [START auth_phone_recaptcha_render]\n  recaptchaVerifier.render().then((widgetId) => {\n    window.recaptchaWidgetId = widgetId;\n  });\n  // [END auth_phone_recaptcha_render]\n}\n\nfunction phoneSignIn() {\n  function getPhoneNumberFromUserInput() {\n    return \"+15558675309\";\n  }\n\n  // [START auth_phone_signin]\n  const phoneNumber = getPhoneNumberFromUserInput();\n  const appVerifier = window.recaptchaVerifier;\n  firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n      .then((confirmationResult) => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        window.confirmationResult = confirmationResult;\n        // ...\n      }).catch((error) => {\n        // Error; SMS not sent\n        // ...\n      });\n  // [END auth_phone_signin]\n}\n\nfunction verifyCode() {\n  function getCodeFromUserInput() {\n    return \"1234\";\n  }\n\n  /** @type {firebase.auth.ConfirmationResult} */\n  const confirmationResult = undefined;\n\n  // [START auth_phone_verify_code]\n  const code = getCodeFromUserInput();\n  confirmationResult.confirm(code).then((result) => {\n    // User signed in successfully.\n    const user = result.user;\n    // ...\n  }).catch((error) => {\n    // User couldn't sign in (bad verification code?)\n    // ...\n  });\n  // [END auth_phone_verify_code]\n}\n\nfunction getRecaptchaResponse() {\n  const recaptchaWidgetId = \"...\";\n  const grecaptcha = {};\n\n  // [START auth_get_recaptcha_response]\n  const recaptchaResponse = grecaptcha.getResponse(recaptchaWidgetId);\n  // [END auth_get_recaptcha_response]\n}"]},"metadata":{},"sourceType":"module"}